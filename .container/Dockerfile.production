###########
# BUILDER #
###########

# pull official base image
FROM python:alpine as builder

# set work directory
RUN mkdir /workspace
WORKDIR /workspace

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . /workspace
RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /workspace/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:alpine

# create directory for the app user
RUN mkdir -p /home/coders

# create the app user
RUN addgroup -S coders && adduser -S coders -G coders

# create the appropriate directories
ENV HOME=/home/coders
ENV APP_HOME=/home/coders/production
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /workspace/wheels /wheels
COPY --from=builder /workspace/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./.container/.entrypoint.production.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R coders:coders $APP_HOME

# change to the app user
USER coders

# run entrypoint.prod.sh
ENTRYPOINT ["/home/coders/production/.entrypoint.production.sh"]
